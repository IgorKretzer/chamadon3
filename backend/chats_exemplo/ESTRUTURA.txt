┌─────────────────────────────────────────────────────────────────┐
│                    ESTRUTURA CHATS DE EXEMPLO                   │
└─────────────────────────────────────────────────────────────────┘

📁 backend/
  │
  ├── 📁 chats_exemplo/                     ← PASTA PRINCIPAL
  │   │
  │   ├── 📄 README.md                      ← Documentação técnica
  │   ├── 📄 ESTRUTURA.txt                  ← Este arquivo
  │   │
  │   └── 📄 ticket_123456.json             ← CHAT DE EXEMPLO
  │       │
  │       ├── ticket_numero: "123456"
  │       ├── cliente: "Teste"
  │       ├── titulo: "Erro ao processar..."
  │       ├── historico_chat: [...]         ← 44 mensagens
  │       └── analise_esperada: {...}       ← Resultado esperado
  │
  ├── 📁 app/
  │   ├── 📁 services/
  │   │   ├── 📄 movidesk_service.py        ← MODIFICADO
  │   │   │   └── _get_chat_exemplo()       ← NOVO MÉTODO
  │   │   │
  │   │   └── 📄 ia_service.py              ← MODIFICADO
  │   │       └── _montar_prompt()          ← NOVO TEMPLATE
  │   │
  │   └── ...
  │
  └── 📄 test_chat_exemplo.py               ← SCRIPT DE TESTE


┌─────────────────────────────────────────────────────────────────┐
│                        FLUXO DE EXECUÇÃO                        │
└─────────────────────────────────────────────────────────────────┘

1. USUÁRIO DIGITA
   "123456" no campo de ticket
   
   ↓

2. FRONTEND CHAMA API
   POST /api/analise/ticket
   { "ticket_numero": "123456" }
   
   ↓

3. BACKEND VERIFICA
   movidesk_service.get_ticket("123456")
   
   ├─ Existe ticket_123456.json?
   │  
   ├─ ✅ SIM → Carrega chat de exemplo
   │           └─ Retorna dados do JSON
   │
   └─ ❌ NÃO → Busca no Movidesk
              └─ Faz chamada API
   
   ↓

4. IA ANALISA
   ia_service.analisar_ticket(dados)
   
   ├─ Lê histórico do chat
   ├─ Aplica template
   └─ Gera chamado formatado
   
   ↓

5. RETORNA RESULTADO
   {
     "tipo": "inconsistencia",
     "modulo": "Financeiro",
     "chamado_texto": "VERSÃO DO SISTEMA..."
   }


┌─────────────────────────────────────────────────────────────────┐
│                      TEMPLATE DO CHAMADO                        │
└─────────────────────────────────────────────────────────────────┘

VERSÃO DO SISTEMA EM QUE O PROBLEMA OCORREU:
R = [versão ou vazio]

CÓDIGO DA BASE QUE APRESENTA O PROBLEMA:
R = [código da unidade/base]

JUSTIFICATIVA DA URGÊNCIA:
R = [impacto e urgência]

MENU/LOCAL DO SISTEMA EM QUE ACONTECE:
R = [caminho completo do menu]

BRIEFING:
R = [descrição detalhada do problema]

EXEMPLOS (OBRIGATÓRIO):
R = [dados específicos: usuários, códigos, etc]

OBS:
R = [informações adicionais, emails, tickets relacionados]


┌─────────────────────────────────────────────────────────────────┐
│                   ARQUIVOS DE DOCUMENTAÇÃO                      │
└─────────────────────────────────────────────────────────────────┘

📄 COMO_USAR_CHATS_EXEMPLO.md       ← Guia rápido para usuários
📄 CHATS_EXEMPLO.md                 ← Documentação completa
📄 backend/chats_exemplo/README.md  ← Detalhes técnicos


┌─────────────────────────────────────────────────────────────────┐
│                      COMO ADICIONAR NOVOS                       │
└─────────────────────────────────────────────────────────────────┘

1. Crie arquivo: ticket_NUMERO.json

2. Copie estrutura do ticket_123456.json

3. Preencha os campos:
   - ticket_numero
   - cliente (use "Teste")
   - titulo
   - historico_chat (array de mensagens)
   - analise_esperada (opcional)

4. Salve e teste:
   python3 test_chat_exemplo.py


┌─────────────────────────────────────────────────────────────────┐
│                        CHATS DISPONÍVEIS                        │
└─────────────────────────────────────────────────────────────────┘

┌────────┬──────────────────────────┬────────────────────┐
│ Ticket │ Título                   │ Mensagens          │
├────────┼──────────────────────────┼────────────────────┤
│ 123456 │ Erro arquivo retorno     │ 44 mensagens       │
│        │ Banco Inter              │ Bases: 2938, 68330 │
└────────┴──────────────────────────┴────────────────────┘


┌─────────────────────────────────────────────────────────────────┐
│                          PRÓXIMOS PASSOS                        │
└─────────────────────────────────────────────────────────────────┘

✅ Sistema configurado e funcionando
✅ Chat de exemplo 123456 criado
✅ Template atualizado
✅ Documentação criada
✅ Script de teste criado

📝 AGORA VOCÊ PODE:

1. Testar no frontend com o ticket 123456
2. Adicionar mais chats de exemplo
3. Compartilhar com a equipe
4. Usar para treinamento


